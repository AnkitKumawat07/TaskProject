package com.TaskDemo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.TaskDemo.Entity.Task;
import com.TaskDemo.service.taskService;



@RestController
@RequestMapping("/tasks")

public class TaskController {

	@Autowired
	private taskService taskservice;
	
	@GetMapping
    public List<Task> getAllTasks() {
        return taskservice.findAllTasks();
    }

//	@ApiOperation(value = "Get item by ID")
//    @ApiResponses(value = {
//            @ApiResponse(code = 200, message = "Item found"),
//            @ApiResponse(code = 404, message = "Item not found")
//    })
    @GetMapping("/{id}")
    public ResponseEntity<Task> getTaskById(@PathVariable Long id) {
    	Task task =  taskservice.getTaskById(id);
    	if (task != null) {
            return new ResponseEntity<>(task, HttpStatus.OK);
        } else {
            return new ResponseEntity<>(HttpStatus.NOT_FOUND);
        }
    }

	//@ApiOperation(value = "Create a new task")
    @PostMapping
    public ResponseEntity<Void> createTask(@RequestBody Task task) {
    	taskservice.createTask(task);
    	return new ResponseEntity<>(HttpStatus.CREATED);
    }

	//@ApiOperation(value = "Update an task item")
    @PutMapping("/{id}")
    public ResponseEntity<Void> updateTask(@PathVariable Long id, @RequestBody Task task) {
        task.setId(id);
        taskservice.updateTask(id, task);
        return new ResponseEntity<>(HttpStatus.OK);
    }
	
	//@ApiOperation(value = "Delete an item by ID")
    @DeleteMapping("/{id}")
//	 @ApiResponses(value = {
//	            @ApiResponse(code = 204, message = "Item deleted"),
//	            @ApiResponse(code = 404, message = "Item not found")
//	    })
    public ResponseEntity<Void> deleteTask(@PathVariable Long id) {
        taskservice.deleteTask(id);
        return new ResponseEntity<>(HttpStatus.OK);
    }
}
