package com.TaskDemo.Task;

import static org.mockito.Mockito.when;

import java.util.Date;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;

import com.TaskDemo.Entity.Task;
import com.TaskDemo.controller.TaskController;
import com.TaskDemo.service.taskService;
import com.fasterxml.jackson.databind.ObjectMapper;


@ExtendWith(MockitoExtension.class)
@SpringBootTest
public class TaskApiTests {
	
	@Autowired 
	private MockMvc mockMvc;
    
	
	@Mock
	private taskService taskservice;
	private Task taskOne;
	
	@InjectMocks
    private  TaskController taskController;
	
	
	private static final String END_POINT_URL = "/tasks";
	
//	/@BeforeEach
//	void setup() {
//		taskOne = new Task();
//		taskOne.setTaskName("Task Test1");
//		taskOne.setTaskDescription("Test Tasl Working");
//		taskOne.setDateSubmit(new Date());
//		taskOne.setPriority((short) 5);
//	}
	
	@Test
	public void getTaskByIdTest() throws Exception {
		Task task = new Task(1L,"Task1","Working",(short)2,new Date(),(short)5);
		when(taskservice.getTaskById(1L)).thenReturn(task);
		
		mockMvc.perform(MockMvcRequestBuilders.get("/tasks/1"))
				.andExpect(MockMvcResultMatchers.status().isOk());
		
	}
	
	
	
	
}
